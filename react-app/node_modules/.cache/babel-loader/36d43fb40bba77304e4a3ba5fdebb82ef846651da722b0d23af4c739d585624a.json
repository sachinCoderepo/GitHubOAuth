{"ast":null,"code":"var _jsxFileName = \"/home/sachin/my-app/src/components/textForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextForm(prop) {\n  _s();\n  const [text, setText] = useState(\"Enter text Here\");\n  setText(\"vgdhbjafs\");\n  const HnadlUpClick = () => {\n    // console.log(\"Button is click\" + text)\n    let newText = text.toUpperCase();\n    // setText (newText);\n  };\n\n  const handleOnChange = event => {\n    // console.log(\"onChange\")\n    // setText(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: prop.heading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mb-3\",\n      children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"postContent\",\n        value: text,\n        onChange: handleOnChange,\n        rows: 8,\n        cols: 80\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: HnadlUpClick,\n      children: \"Convert to UpperCase\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Text Summary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [text.split(\" \").length, \" Words and \", text.length, \" Charecters\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Can be read in \", 0.008 * text.split(\" \").length, \" Minutes\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_s(TextForm, \"IzS6TJft60I3Uu3kvhcyJ2LAtK4=\");\n_c = TextForm;\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TextForm","prop","_s","text","setText","HnadlUpClick","newText","toUpperCase","handleOnChange","event","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","className","value","onChange","rows","cols","onClick","split","length","_c","$RefreshReg$"],"sources":["/home/sachin/my-app/src/components/textForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function TextForm(prop) {\n  const [text, setText] = useState(\"Enter text Here\");\n  setText(\"vgdhbjafs\");\n\n    const HnadlUpClick = ()=>{\n        // console.log(\"Button is click\" + text)\n        let newText = text.toUpperCase();\n        // setText (newText);\n\n    }\n    const handleOnChange = (event)=>{\n        // console.log(\"onChange\")\n        // setText(event.target.value);\n    }\n\n  return (\n    <div>\n      <h3>{prop.heading}</h3>\n      <div className='mb-3'>\n        <textarea className=\"postContent\" value={text} onChange={handleOnChange} rows={8} cols={80}></textarea>\n      </div>\n      <button className=\"btn btn-primary\"onClick={HnadlUpClick}>Convert to UpperCase</button>\n      <h2>Your Text Summary</h2>\n      <p>{text.split(\" \").length} Words and {text.length} Charecters</p>\n      <p>Can be read in {0.008 * text.split(\" \").length} Minutes</p>\n      <h4>Preview</h4>\n      <p>{text}</p>\n    </div>\n  );\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,QAAQA,CAACC,IAAI,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,iBAAiB,CAAC;EACnDO,OAAO,CAAC,WAAW,CAAC;EAElB,MAAMC,YAAY,GAAGA,CAAA,KAAI;IACrB;IACA,IAAIC,OAAO,GAAGH,IAAI,CAACI,WAAW,CAAC,CAAC;IAChC;EAEJ,CAAC;;EACD,MAAMC,cAAc,GAAIC,KAAK,IAAG;IAC5B;IACA;EAAA,CACH;EAEH,oBACEV,OAAA;IAAAW,QAAA,gBACEX,OAAA;MAAAW,QAAA,EAAKT,IAAI,CAACU;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACvBhB,OAAA;MAAKiB,SAAS,EAAC,MAAM;MAAAN,QAAA,eACnBX,OAAA;QAAUiB,SAAS,EAAC,aAAa;QAACC,KAAK,EAAEd,IAAK;QAACe,QAAQ,EAAEV,cAAe;QAACW,IAAI,EAAE,CAAE;QAACC,IAAI,EAAE;MAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpG,CAAC,eACNhB,OAAA;MAAQiB,SAAS,EAAC,iBAAiB;MAAAK,OAAO,EAAEhB,YAAa;MAAAK,QAAA,EAAC;IAAoB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvFhB,OAAA;MAAAW,QAAA,EAAI;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BhB,OAAA;MAAAW,QAAA,GAAIP,IAAI,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,aAAW,EAACpB,IAAI,CAACoB,MAAM,EAAC,aAAW;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAClEhB,OAAA;MAAAW,QAAA,GAAG,iBAAe,EAAC,KAAK,GAAGP,IAAI,CAACmB,KAAK,CAAC,GAAG,CAAC,CAACC,MAAM,EAAC,UAAQ;IAAA;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAC9DhB,OAAA;MAAAW,QAAA,EAAI;IAAO;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChBhB,OAAA;MAAAW,QAAA,EAAIP;IAAI;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACb,EAAA,CA7BuBF,QAAQ;AAAAwB,EAAA,GAARxB,QAAQ;AAAA,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
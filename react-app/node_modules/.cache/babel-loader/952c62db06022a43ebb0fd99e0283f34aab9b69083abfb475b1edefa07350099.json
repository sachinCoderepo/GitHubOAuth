{"ast":null,"code":"var _jsxFileName = \"/home/sachin/my-app/src/components/About.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function About() {\n  _s();\n  const [myStyle, setmyStyle] = useState({\n    color: \"white\",\n    backgroundColor: \"black\"\n  });\n  const [btnTxt, setbtnTxt] = useState(\"Enable Litemode\");\n  const DarkClick = () => {\n    if (myStyle.color == \"white\") {\n      setmyStyle({\n        color: \"black\",\n        backgroundColor: \"white\"\n      });\n      setbtnTxt(\"Enable Darkmode\");\n    } else {\n      setmyStyle({\n        color: \"white\",\n        backgroundColor: \"black\"\n      });\n      setbtnTxt(\"Enable Litemode\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    style: myStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" About Us \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"accordion\",\n      id: \"accordionExample\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"accordion-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          class: \"accordion-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"collapseOne\",\n          class: \"accordion-collapse collapse show\",\n          \"data-bs-parent\": \"#accordionExample\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"accordion-body\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"This is the first item's accordion body.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 9\n            }, this), \" It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the \", /*#__PURE__*/_jsxDEV(\"code\", {\n              children: \".accordion-body\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 428\n            }, this), \", though the transition does limit overflow.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 7\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: DarkClick,\n      children: \"Enable Darkmode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 1\n  }, this);\n}\n_s(About, \"eLjO1fc98V18uFzGg/WjPc80r9A=\");\n_c = About;\nvar _c;\n$RefreshReg$(_c, \"About\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","About","_s","myStyle","setmyStyle","color","backgroundColor","btnTxt","setbtnTxt","DarkClick","className","style","children","fileName","_jsxFileName","lineNumber","columnNumber","class","id","onClick","_c","$RefreshReg$"],"sources":["/home/sachin/my-app/src/components/About.js"],"sourcesContent":["\nimport React, { useState } from 'react'\n\nexport default function About() {\n    const[myStyle, setmyStyle]=useState({\n        color:\"white\",\n        backgroundColor:\"black\"\n     })\n    const[btnTxt, setbtnTxt]=useState(\"Enable Litemode\");\n    const DarkClick = ()=>{\n        if(myStyle.color == \"white\"){\n        setmyStyle({color:\"black\",\n        backgroundColor:\"white\"})\n    setbtnTxt(\"Enable Darkmode\")}\n        else{\n            setmyStyle({color:\"white\",\n        backgroundColor:\"black\"})\n        setbtnTxt(\"Enable Litemode\")}\n        }\n  \n        \n    \n  return (\n    \n<div className='container' style={myStyle}>\n    <h2> About Us </h2>\n    <div class=\"accordion\" id=\"accordionExample\">\n  <div class=\"accordion-item\">\n    <h2 class=\"accordion-header\">\n      {/* <button class=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n        Accordion Item #1\n      </button> */}\n    </h2>\n    <div id=\"collapseOne\" class=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\n      <div class=\"accordion-body\">\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classes that we use to style each element. These classes control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\n      </div>\n    </div>\n  </div>\n   \n        \n    </div>\n    <button className=\"btn btn-primary\"onClick={DarkClick}>Enable Darkmode</button>\n<button>  </button>\n    </div>\n  )\n}\n"],"mappings":";;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvC,eAAe,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC5B,MAAK,CAACC,OAAO,EAAEC,UAAU,CAAC,GAACN,QAAQ,CAAC;IAChCO,KAAK,EAAC,OAAO;IACbC,eAAe,EAAC;EACnB,CAAC,CAAC;EACH,MAAK,CAACC,MAAM,EAAEC,SAAS,CAAC,GAACV,QAAQ,CAAC,iBAAiB,CAAC;EACpD,MAAMW,SAAS,GAAGA,CAAA,KAAI;IAClB,IAAGN,OAAO,CAACE,KAAK,IAAI,OAAO,EAAC;MAC5BD,UAAU,CAAC;QAACC,KAAK,EAAC,OAAO;QACzBC,eAAe,EAAC;MAAO,CAAC,CAAC;MAC7BE,SAAS,CAAC,iBAAiB,CAAC;IAAA,CAAC,MACrB;MACAJ,UAAU,CAAC;QAACC,KAAK,EAAC,OAAO;QAC7BC,eAAe,EAAC;MAAO,CAAC,CAAC;MACzBE,SAAS,CAAC,iBAAiB,CAAC;IAAA;EAC5B,CAAC;EAIP,oBAEFR,OAAA;IAAKU,SAAS,EAAC,WAAW;IAACC,KAAK,EAAER,OAAQ;IAAAS,QAAA,gBACtCZ,OAAA;MAAAY,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBhB,OAAA;MAAKiB,KAAK,EAAC,WAAW;MAACC,EAAE,EAAC,kBAAkB;MAAAN,QAAA,eAC9CZ,OAAA;QAAKiB,KAAK,EAAC,gBAAgB;QAAAL,QAAA,gBACzBZ,OAAA;UAAIiB,KAAK,EAAC;QAAkB;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIxB,CAAC,eACLhB,OAAA;UAAKkB,EAAE,EAAC,aAAa;UAACD,KAAK,EAAC,kCAAkC;UAAC,kBAAe,mBAAmB;UAAAL,QAAA,eAC/FZ,OAAA;YAAKiB,KAAK,EAAC,gBAAgB;YAAAL,QAAA,gBACzBZ,OAAA;cAAAY,QAAA,EAAQ;YAAwC;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,8WAA0W,eAAAhB,OAAA;cAAAY,QAAA,EAAM;YAAe;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,gDACjc;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGC,CAAC,eACNhB,OAAA;MAAQU,SAAS,EAAC,iBAAiB;MAAAS,OAAO,EAAEV,SAAU;MAAAG,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACnFhB,OAAA;MAAAY,QAAA,EAAQ;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACd,EAAA,CA3CuBD,KAAK;AAAAmB,EAAA,GAALnB,KAAK;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}